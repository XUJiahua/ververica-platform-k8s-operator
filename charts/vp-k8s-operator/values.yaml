rbac:
  enabled: true

rbacProxy:
  enabled: true
  logLevel: 10
  imageRepository: gcr.io/kubebuilder/kube-rbac-proxy
  imageTag: v0.4.1
  imagePullPolicy: IfNotPresent
  port: 8443

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Metrics
metricsHost: 127.0.0.1
metricsPort: 8080
# Whether or not to create a Prometheus Operator ServiceMonitor
metricsMonitorEnabled: false
# Extra labels for the ServiceMonitor
metricsMonitorLabels: {}
# Optionally, override the ServiceMonitor namespace
# metricsMonitorNamespace: ""

# Whether or not to create CertManager certs for webhook serving
certs:
  enabled: true
  # If not enabled, must specify another secret with the certificates
  # existingSecret: "secret-name"

# The URL of the Ververica Platform service
vvpUrl: http://ververica-platform

# The edition of the Ververica Platform to target
# Either `enterprise` or `community`
vvpEdition: enterprise

# Image for the deployment
imageRepository: johnxu1989/ververica-platform-k8s-operator
imageTag: v0.9.4
imagePullPolicy: IfNotPresent

# Resources for the deployment
resources:
  limits:
    cpu: 100m
    memory: 30Mi
  requests:
    cpu: 100m
    memory: 20Mi

# Liveness Probe (metrics endpoint can be used for that)
livenessProbe: {}
# livenessProbe:
#   httpGet:
#     path: /metrics
#     port: 8080
#   failureThreshold: 3
#   successThreshold: 1
#   initialDelaySeconds: 30
#   periodSeconds: 10

# Extra arguments to pass to the manager
# extraArgs: []

# Annotations to be added to pods
podAnnotations: {}
